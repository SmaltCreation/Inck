<?php

namespace Inck\NotificationBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Inck\UserBundle\Entity\User;

/**
 * SubscriberNotificationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SubscriberNotificationRepository extends EntityRepository
{
    /**
     * @param User $to
     * @return array
     */
    public function getNew(User $to)
    {
        $qb = $this->createQueryBuilder('n');

        $qb
            ->select('n')
            ->where('n.to = :to')
            ->setParameter('to', $to)
            ->andWhere('n.displayedAt IS NULL')
            ->orderBy('n.id', 'ASC');

        return $qb->getQuery()->getResult();
    }

    /**
     * @param SubscriberNotification $notification
     * @param \DateInterval $interval
     * @return bool
     */
    public function isAlreadySent(SubscriberNotification $notification, \DateInterval $interval)
    {
        $qb = $this->createQueryBuilder('n');
        $limit = new \DateTime();
        $limit->sub($interval);

        $qb
            ->select('COUNT(n)')
            ->where('n.subscriber = :subscriber')
            ->setParameter('subscriber', $notification->getSubscriber())
            ->andWhere('n.to = :to')
            ->setParameter('to', $notification->getTo())
            ->andWhere('n.createdAt >= :createdAt')
            ->setParameter('createdAt', $limit->format('Y-m-d H:i:s'));

        return ((int) $qb->getQuery()->getSingleScalarResult() !== 0);
    }
}
